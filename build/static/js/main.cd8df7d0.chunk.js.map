{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/emotionLogReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/emotionsSaga.js","redux/sagas/index.js","components/Utilities/LogOutButton/LogOutButton.js","components/Layout/Nav/Nav.js","components/Layout/Footer/Footer.js","components/Pages/HomePageContent/HomePageContent.js","components/Pages/SignInPage/SignInPage.js","components/Pages/SignUpPage/SignUpPage.js","components/Utilities/ProtectedRoute/ProtectedRoute.js","components/Pages/AboutPage/AboutPage.js","components/Pages/SettingsPage/SettingsPage.js","components/Utilities/LogStage1/LogStage1.js","components/Utilities/LogStage2/LogStage2.js","components/Utilities/LogStage3/LogStage3.js","components/Utilities/LogStage4/LogStage4.js","components/Utilities/LogEmotionsButton/LogEmotionsButton.js","components/Pages/UserPage/UserPage.js","components/Charts/PieChart/PieChart.js","components/Charts/RadarChart/RadarChart.js","components/Charts/CalendarChart/CalendarChart.js","components/Charts/TableChart/TableChart.js","components/Layout/ContentSwitch/ContentSwitch.js","components/Layout/Content/Content.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage","loginMode","userReducer","payload","emotionPie","emotionalRadar","emotionsToDate","emotionsTable","rootReducer","errors","user","emotionLog","loginUser","logoutUser","loginSaga","put","config","headers","withCredentials","axios","post","console","log","response","status","takeLatest","registerUser","registrationSaga","fetchUser","deleteUser","userSaga","get","data","delete","addEmotion","fetchPieData","fetchRadarData","fetchCalendarData","fetchTableData","emotionsSaga","rootSaga","all","greyColor","createMuiTheme","palette","primary","main","grey","useStyles","makeStyles","toolbarButtons","marginLeft","connect","props","classes","ThemeProvider","theme","Button","size","variant","color","className","onClick","dispatch","icon","marginRight","spacing","toolbarTitle","fontSize","fontWeight","textDecorationLine","menu","link","settings","AppBar","position","Toolbar","to","id","IconButton","aria-label","Copyright","Typography","align","Link","href","Date","getFullYear","appBar","borderTop","divider","copyright","marginBottom","Footer","elevation","Box","mt","homeContent","maxWidth","textAlign","margin","HomePageContent","Alert","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","backgroundSize","backgroundPosition","paper","display","flexDirection","alignItems","avatar","secondary","form","width","marginTop","submit","useState","username","setUserName","open","vertical","horizontal","openState","setOpenState","handleClose","event","reason","password","setPassword","renderAlert","Snackbar","autoHideDuration","onClose","severity","Grid","container","component","CssBaseline","item","xs","sm","md","Paper","square","Avatar","noValidate","TextField","required","fullWidth","label","name","autoComplete","autoFocus","value","onChange","target","FormControlLabel","control","Checkbox","preventDefault","history","useHistory","push","ComponentToProtect","otherProps","ComponentToShow","SignInPage","SignUpPage","AboutPage","Container","direction","justify","gutterBottom","padding","overflow","box","startIcon","HtmlTooltip","withStyles","tooltip","typography","pxToRem","border","Tooltip","gridTemplateColumns","gridGap","emotionButtons","whiteSpace","anger","red","fear","lightGreen","sadness","blue","disgust","deepPurple","surprise","green","anticipation","orange","trust","lime","joy","yellow","DialogTitle","closeButton","right","top","children","other","disableTypography","DialogContent","minHeight","MuiDialogContent","DialogActions","MuiDialogActions","handleClickForPrimEmo","param","setPrimaryEmotion","dividers","arrow","leaveDelay","placement","title","Fragment","DialogContentText","primaryEmotion","MobileStepper","steps","activeStep","nextButton","nextStage","disabled","KeyboardArrowLeft","KeyboardArrowRight","backButton","minWidth","rightAlign","marks","valueText","numValue","setNumValue","emotion","setEmotion","renderNotStrongEmotion","renderStrongEmotion","intensityEmotionOptions","setIntensityEmotion","useEffect","setIntensityLevel","Slider","track","defaultValue","getAriaValueText","aria-labelledby","step","min","max","valueLabelDisplay","intensityLevel","intensityEmotion","prevStage","multiline","rows","handleChangeForHow","e","setHowFeel","howFeel","handleChangeForWhy","setWhyFeel","whyFeel","setEmotionLog","handleCloseAndDispatch","Transition","React","forwardRef","ref","Slide","stage","setStage","setOpen","setActiveStep","useTheme","fullScreen","useMediaQuery","breakpoints","down","flexGrow","prevActiveStep","Dialog","TransitionComponent","keepMounted","renderSwitch","appBarSpacer","mixins","toolbar","content","button","paddingTop","paddingBottom","logbox","justifyContent","alignContent","chart","ownProps","setData","bottom","left","innerRadius","padAngle","cornerRadius","colors","borderWidth","borderColor","from","modifiers","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","animate","motionStiffness","motionDamping","defs","background","stagger","rotation","lineWidth","fill","match","legends","anchor","translateY","itemWidth","itemHeight","itemTextColor","symbolSize","symbolShape","effects","on","style","keys","indexBy","maxValue","curve","gridLevels","gridShape","gridLabelOffset","enableDots","dotSize","dotColor","dotBorderWidth","dotBorderColor","enableDotLabel","dotLabel","dotLabelYOffset","fillOpacity","blendMode","isInteractive","translateX","start","day","startDate","date","length","end","endDate","emptyColor","minValue","yearSpacing","monthBorderColor","monthLegendPosition","dayBorderWidth","dayBorderColor","itemCount","itemsSpacing","itemDirection","useStyles1","flexShrink","TablePaginationActions","count","page","rowsPerPage","onChangePage","Math","ceil","table","StyledTableCell","head","common","black","white","body","TableCell","StyledTableRow","hover","TableRow","setPage","setRowsPerPage","emptyRows","TableContainer","Table","TableHead","TableBody","slice","map","row","key","colSpan","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","Content","Component","componentDidMount","this","render","exact","path","UserPage","PieChart","RadarChart","CalendarChart","TableChart","SettingsPage","ContentSwitch","mainTheme","blueGrey","dark","light","amber","ark","App","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cd8df7d0.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","import { combineReducers } from \"redux\";\n\nconst emotionPie = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_EMOTION_PIE\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst emotionalRadar = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_EMOTIONAL_RADAR\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst emotionsToDate = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_EMOTIONS_TO_DATE\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nconst emotionsTable = (state = [], action) => {\n  switch (action.type) {\n    case \"SET_EMOTIONS_TABLE\":\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  emotionPie,\n  emotionalRadar,\n  emotionsToDate,\n  emotionsTable,\n});\n","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport emotionLog from \"./emotionLogReducer\";\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  emotionLog,\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('/api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('/api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('/api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('/api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\n// worker Saga: will be fired on \"DELETE_USER\" actions\nfunction* deleteUser() {\n  try {\n    yield axios.delete(\"/api/user\");\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n  yield takeLatest('DELETE_USER', deleteUser);\n}\n\nexport default userSaga;\n","import axios from \"axios\";\nimport { put, takeLatest } from \"redux-saga/effects\";\n\n// worker Saga: will be fired on \"ADD_EMOTION_LOG\" actions\nfunction* addEmotion(action) {\n  try {\n    const emotionLog = action.payload;\n    yield axios.post(\"/api/emotions/log\", emotionLog);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// worker Saga: will be fired on \"FETCH_PIE_DATA\" actions\nfunction* fetchPieData() {\n  try {\n    const response = yield axios.get(\"/api/emotions/pie\");\n    yield put({ type: \"SET_EMOTION_PIE\", payload: response.data });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// worker Saga: will be fired on \"FETCH_RADAR_DATA\" actions\nfunction* fetchRadarData() {\n  try {\n    const response = yield axios.get(\"/api/emotions/radar\");\n    yield put({ type: \"SET_EMOTIONAL_RADAR\", payload: response.data });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// worker Saga: will be fired on \"FETCH_RADAR_DATA\" actions\nfunction* fetchCalendarData() {\n  try {\n    const response = yield axios.get(\"/api/emotions/calendar\");\n    yield put({ type: \"SET_EMOTIONS_TO_DATE\", payload: response.data });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\n// worker Saga: will be fired on \"FETCH_TABLE_DATA\" actions\nfunction* fetchTableData() {\n  try {\n    const response = yield axios.get(\"/api/emotions/table\");\n    yield put({ type: \"SET_EMOTIONS_TABLE\", payload: response.data });\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction* emotionsSaga() {\n  yield takeLatest(\"ADD_EMOTION_LOG\", addEmotion);\n  yield takeLatest(\"FETCH_PIE_DATA\", fetchPieData);\n  yield takeLatest(\"FETCH_RADAR_DATA\", fetchRadarData);\n  yield takeLatest(\"FETCH_CALENDAR_DATA\", fetchCalendarData);\n  yield takeLatest(\"FETCH_TABLE_DATA\", fetchTableData);\n}\n\nexport default emotionsSaga;\n","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport emotionsSaga from \"./emotionsSaga\";\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    emotionsSaga(),\n  ]);\n}\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button } from \"@material-ui/core\";\nimport {\n  makeStyles,\n} from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport {grey} from '@material-ui/core/colors';\n\nconst greyColor = createMuiTheme({\n  palette: {\n    primary: {\n      // joy\n      main: grey[50],\n    },\n  },\n});\n\nconst useStyles = makeStyles(() => ({\n  // this group of buttons will be aligned to the right side\n  toolbarButtons: {\n    marginLeft: \"1vh\",\n  },\n}));\n\nconst LogOutButton = (props) => {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={greyColor}>\n      <Button\n        size=\"medium\"\n        variant=\"outlined\"\n        color=\"primary\"\n        className={classes.toolbarButtons}\n        onClick={() => props.dispatch({ type: \"LOGOUT\" })}\n      >\n        Log Out\n      </Button>\n    </ThemeProvider>\n  );\n};\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LogOutButton from '../../Utilities/LogOutButton/LogOutButton';\nimport { AppBar, Button, Toolbar } from \"@material-ui/core\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport HelpSharpIcon from \"@material-ui/icons/HelpSharp\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { grey } from \"@material-ui/core/colors\";\n\nconst greyColor = createMuiTheme({\n  palette: {\n    primary: {\n      // joy\n      main: grey[50],\n    },\n  },\n});\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  toolbarTitle: {\n    fontSize: \"24px\",\n    fontWeight: 700,\n    color: \"#fafafa\",\n    textDecorationLine: \"none\",\n  },\n  menu: {\n    marginLeft: \"auto\",\n  },\n  link: {\n    textDecorationLine: \"none\",\n  },\n  settings: {\n    marginLeft: \"1vh\",\n  },\n}));\n\nconst Nav = (props) => {\n  const classes = useStyles();\n  return (\n    <>\n      {/* <div className=\"nav\"> */}\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <HelpSharpIcon color=\"secondary\" className={classes.icon} />\n          <Link to=\"/home\" className={classes.toolbarTitle}>\n            HowDIF\n          </Link>\n          <nav className={classes.menu}>\n            <ThemeProvider theme={greyColor}>\n              <Link to=\"/about\" className={classes.link}>\n                <Button color=\"primary\" size=\"small\">\n                  About\n                </Button>\n              </Link>\n            </ThemeProvider>\n          </nav>\n          {props.user.id && (\n            <>\n              <LogOutButton />{\" \"}\n              <ThemeProvider theme={greyColor}>\n                <Link to=\"/settings\" className={classes.settings}>\n                  <IconButton aria-label=\"settings\" color=\"primary\">\n                    <SettingsIcon />\n                  </IconButton>\n                </Link>\n              </ThemeProvider>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n      {/* <Link to=\"/home\">\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            HowDIF\n          </Typography>\n        </Link> */}\n      {/* <div className=\"nav-right\"> */}\n      {/* <Link className=\"nav-link\" to=\"/home\"> */}\n      {/* Show this link if they are logged in or not,\n        but call this link 'Home' if they are logged in,\n        and call this link 'Login / Register' if they are not */}\n      {/* {props.user.id ? \"Home\" : \"Login / Register\"} */}\n      {/* </Link> */}\n      {/* Always show this link since the about page is not protected */}\n      {/* <Link className=\"nav-link\" to=\"/about\">\n        About\n      </Link>\n      <Link className=\"nav-link\" to=\"/landing\">\n        Landing\n      </Link> */}\n      {/* Show the link to the info page and the logout button if the user is logged in */}\n      {/* {props.user.id && (\n          <> */}\n      {/* <Link className=\"nav-link\" to=\"/info\">\n            Info Page\n          </Link> */}\n      {/* <LogOutButton className=\"nav-link\" />\n          </>\n        )}\n      </div> */}\n      {/* </div> */}\n    </>\n  );\n} \n\n// Instead of taking everything from state, we just want the user\n// object to determine if they are logged in\n// if they are logged in, we show them a few more links \n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user }) => ({ user });\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(Nav);\n","import React from 'react';\nimport { AppBar, Box, Link, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n// import './Footer.css'\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"#\">\n        HowDIF\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n  },\n  copyright: {\n    marginBottom: \"10vh\",\n  },\n}));\n\nconst Footer = () => {\n  const classes = useStyles();\n  return (\n    <footer>\n      <AppBar\n        position=\"static\"\n        color=\"default\"\n        elevation={0}\n        className={classes.appBar}\n      >\n        <Box mt={5} className={classes.copyright}>\n          <Copyright />\n        </Box>\n      </AppBar>\n    </footer>\n  );\n}\n\nexport default Footer;\n","// React\nimport React from \"react\";\n\nimport { Box, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  homeContent: {\n    maxWidth: \"50vh\",\n    textAlign: \"center\",\n    margin: \"2vh\",\n  },\n}));\n\nconst HomePageContent = () => {\n  const classes = useStyles();\n  return (\n    <Box className={classes.homeContent}>\n      <Typography variant=\"h5\">HowDIF</Typography>\n      <Typography variant=\"body2\">\n        {\n          \"HowDIF is a tool that helps you understand yourself and helps identify the emotions you are feeling. Your feelings and emotions are valid. You deserve to understand them better.\"\n        }\n      </Typography>\n      {/* <Typography variant=\"subtitle1\">\n        HowDIF is a tool that helps you understand yourself and helps identify\n        the emotions you are feeling. Your feelings and emotions are valid. You\n        deserve to understand them better.\n      </Typography> */}\n      {/* <ul>\n        <li>\n          HowDIF is a tool that helps you understand yourself and helps identify\n          the emotions you are feeling. Your feelings and emotions are valid.\n          You deserve to understand them better.\n        </li>\n        <li>\n          HowDIF provides the process to dig deeper into your emotions, and the\n          data to analyze these emotions.\n        </li>\n        <li>\n          With this app you will explore your emotions deeper which will empower\n          you to understand your emotions.\n        </li>\n      </ul> */}\n    </Box>\n  );\n};\n\nexport default HomePageContent;\n\n","import React, { useState } from \"react\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport HomePageContent from \"../HomePageContent/HomePageContent\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random/?people)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignInPage = (props) => {\n  const classes = useStyles();\n\n  const [username, setUserName] = useState();\n\n  const [openState, setOpenState] = useState({\n    open: false,\n    vertical: \"top\",\n    horizontal: \"center\",\n  });\n\n  //https://material-ui.com/components/snackbars/#customized-snackbars\n  const { vertical, horizontal, open } = openState;\n\n  const handleClick = (newState) => {\n    setOpenState({ open: true, ...newState });\n  };\n\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    setOpenState(false);\n  };\n\n  const handleInputChangeForUserName = (e) => {\n    setUserName(e.target.value);\n  };\n\n  const [password, setPassword] = useState();\n\n  const handleInputChangeForPassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const login = (event) => {\n    event.preventDefault();\n\n    if (username && password) {\n      props.dispatch({\n        type: \"LOGIN\",\n        payload: {\n          username: username,\n          password: password,\n        },\n      });\n    } else {\n      props.dispatch({ type: \"LOGIN_INPUT_ERROR\" });\n    }\n    // history.push(\"/home\");\n  };\n\n  const renderAlert = () => {\n    if (props.errors.loginMessage) {\n      setOpenState(true);\n    }\n    return (\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\">\n          This is a success message!\n        </Alert>\n      </Snackbar>\n    );\n  }\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      { renderAlert }\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <HomePageContent />\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"User Name\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n              value={username}\n              onChange={(event) => handleInputChangeForUserName(event)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={(event) => handleInputChangeForPassword(event)}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={login}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link to=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link to=\"/signup\">\n                  <Typography\n                    variant=\"body2\"\n                    onClick={() => {\n                      props.dispatch({ type: \"SET_TO_REGISTER_MODE\" });\n                    }}\n                  >\n                    Don't have an account? Sign Up\"\n                  </Typography>\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(SignInPage);\n","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nimport HomePageContent from \"../HomePageContent/HomePageContent\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random/?people)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignUpPage = (props) => {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const [username, setUserName] = useState();\n\n  const handleInputChangeForUserName = (e) => {\n    setUserName(e.target.value);\n  };\n\n  const [password, setPassword] = useState();\n\n  const handleInputChangeForPassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const registerUser = (event) => {\n    event.preventDefault();\n\n    if (username && password) {\n      props.dispatch({\n        type: \"REGISTER\",\n        payload: {\n          username: username,\n          password: password,\n        },\n      });\n    } else {\n      props.dispatch({ type: \"REGISTRATION_INPUT_ERROR\" });\n    }\n    history.push(\"/home\");\n  };\n\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <HomePageContent />\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"User Name\"\n              name=\"username\"\n              autoComplete=\"username\"\n              autoFocus\n              value={username}\n              onChange={(event) => handleInputChangeForUserName(event)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              value={password}\n              onChange={(event) => handleInputChangeForPassword(event)}\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={registerUser}\n            >\n              Sign Up\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link to=\"signin\">\n                  <Typography\n                    variant=\"body2\"\n                    onClick={() => {\n                      props.dispatch({ type: \"SET_TO_REGISTER_MODE\" });\n                    }}\n                  >\n                    Already have an account? Sign In\"\n                  </Typography>\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default connect()(SignUpPage);\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport SignInPage from \"../../Pages/SignInPage/SignInPage\";\nimport SignUpPage from \"../../Pages/SignUpPage/SignUpPage\";\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if (user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === \"login\") {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = SignInPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = SignUpPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n    <Route\n      // all props like 'exact' and 'path' that were passed in\n      // are now passed along to the 'Route' Component\n      {...otherProps}\n      component={ComponentToShow}\n    />\n  );\n};\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  };\n};\n\nexport default connect(mapStateToProps)(ProtectedRoute);\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Container, Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    height: \"100vh\",\n    marginTop: \"2vh\",\n  },\n});\n\n// This is one of our simplest components\n// It doesn't have local state, so it can be a function component.\n// It doesn't dispatch any redux actions or display any part of redux state\n// or even care what the redux state is, so it doesn't need 'connect()'\n\nconst AboutPage = () => {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  return (\n    <>\n      <Container maxWidth=\"lg\" className={classes.root}>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={3}\n        >\n          <Grid item xs={8}>\n            <Typography variant=\"h3\" gutterBottom>\n              About HowDIF\n            </Typography>\n            <Button variant=\"contained\" onClick={() => history.push(\"/home\")}>\n              Back\n            </Button>\n          </Grid>\n          <Grid item xs={8}>\n            <Typography variant=\"body1\" gutterBottom>\n              HowDIF is a tool that helps you understand yourself and helps\n              identify the emotions you are feeling. Your feelings are valid and\n              you deserve to understand them better.\n            </Typography>\n            <Typography variant=\"body1\" gutterBottom>\n              HowDIF provides the process to dig deeper into your emotions, and\n              the data to analyze these emotions. With this app the user will\n              explore their emotions deeper and it will empower them to\n              understand their emotions.\n            </Typography>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nexport default AboutPage;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Button, Container, Grid, Paper, Typography } from \"@material-ui/core\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    marginTop: \"2vh\",\n  },\n  paper: {\n    maxWidth: \"90vh\",\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n}));\n\nconst SettingsPage = (props) => {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const deleteAccount = () => {\n    props.dispatch({ type: \"DELETE_USER\" });\n    props.dispatch({ type: \"LOGOUT\" });\n    history.push(\"/home\");\n  }\n\n  return (\n    <>\n      <Container maxWidth=\"lg\" className={classes.root}>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={3}\n        >\n          <Grid item xs={8}>\n            <Typography variant=\"h3\" gutterBottom>\n              User Settings\n            </Typography>\n            <Button variant=\"contained\" onClick={() => history.push(\"/home\")}>\n              Back\n            </Button>\n          </Grid>\n          <Grid item xs={8}>\n            <Paper className={classes.paper}>\n              <Box className={classes.box}>\n                <Button\n                  startIcon={<DeleteForeverIcon />}\n                  onClick={() => deleteAccount()}\n                >\n                  Delete Account\n                </Button>\n              </Box>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(SettingsPage);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  DialogContentText,\n  Grid,\n  MobileStepper,\n  Tooltip,\n  Typography,\n} from \"@material-ui/core\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport {\n  red,\n  deepPurple,\n  blue,\n  green,\n  lightGreen,\n  lime,\n  yellow,\n  orange,\n} from \"@material-ui/core/colors\";\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: \"1px solid #dadde9\",\n  },\n}))(Tooltip);\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(12, 1fr)\",\n    gridGap: theme.spacing(3),\n  },\n  emotionButtons: {\n    padding: theme.spacing(1),\n    whiteSpace: \"nowrap\",\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nconst anger = createMuiTheme({\n  palette: {\n    primary: {\n      // anger\n      main: red[300],\n    },\n  },\n});\n\nconst fear = createMuiTheme({\n  palette: {\n    primary: {\n      // fear\n      main: lightGreen[300],\n    },\n  },\n});\n\nconst sadness = createMuiTheme({\n  palette: {\n    primary: {\n      // sadness\n      main: blue[300],\n    },\n  },\n});\n\nconst disgust = createMuiTheme({\n  palette: {\n    primary: {\n      // disgust\n      main: deepPurple[300],\n    },\n  },\n});\n\nconst surprise = createMuiTheme({\n  palette: {\n    primary: {\n      // surprise\n      main: green[300],\n    },\n  },\n});\n\nconst anticipation = createMuiTheme({\n  palette: {\n    primary: {\n      // anticipation\n      main: orange[300],\n    },\n  },\n});\n\nconst trust = createMuiTheme({\n  palette: {\n    primary: {\n      // trust\n      main: lime[300],\n    },\n  },\n});\n\nconst joy = createMuiTheme({\n  palette: {\n    primary: {\n      // joy\n      main: yellow[300],\n    },\n  },\n});\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    minHeight: \"40vh\",\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst LogStage1 = (props) => {\n  const classes = useStyles();\n\n  const handleClickForPrimEmo = (param) => {\n    props.setPrimaryEmotion(param);\n    console.log(param);\n  };\n\n  return (\n    <div>\n      {/* ----- This is the start of the Dialog Area ----- */}\n      <DialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\n        Select a Primary Emotion you are feeling.\n      </DialogTitle>\n      <DialogContent dividers>\n        <Grid container spacing={3}>\n          <Grid item xs={3}>\n            <ThemeProvider theme={anger}>\n              <HtmlTooltip\n                arrow\n                leaveDelay={300}\n                placement=\"top\"\n                title={\n                  <React.Fragment>\n                    <Typography color=\"inherit\" variant=\"body2\">\n                      <b>Anger</b>\n                      {\n                        \" is an intense emotional state involving a strong uncomfortable and hostile response to a perceived provocation, hurt or threat.\"\n                      }\n                    </Typography>\n                  </React.Fragment>\n                }\n              >\n                <Button\n                  onClick={() => handleClickForPrimEmo(\"anger\")}\n                  className={classes.emotionButtons}\n                  size=\"large\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  anger\n                </Button>\n              </HtmlTooltip>\n            </ThemeProvider>\n          </Grid>\n          <Grid item xs={3}>\n            <ThemeProvider theme={anticipation}>\n              <HtmlTooltip\n                arrow\n                leaveDelay={300}\n                placement=\"top\"\n                title={\n                  <React.Fragment>\n                    <Typography color=\"inherit\" variant=\"body2\">\n                      <b>Anticipation</b>\n                      {\n                        \" is an emotion involving pleasure, or anxiety in considering or awaiting an expected event.\"\n                      }\n                    </Typography>\n                  </React.Fragment>\n                }\n              >\n                <Button\n                  onClick={() => handleClickForPrimEmo(\"anticipation\")}\n                  className={classes.emotionButtons}\n                  size=\"large\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  anticipation\n                </Button>\n              </HtmlTooltip>\n            </ThemeProvider>\n          </Grid>\n          <Grid item xs={3}>\n            <ThemeProvider theme={joy}>\n              <HtmlTooltip\n                arrow\n                leaveDelay={300}\n                placement=\"top\"\n                title={\n                  <React.Fragment>\n                    <Typography color=\"inherit\" variant=\"body2\">\n                      <b>Joy</b>\n                      {\" is a feeling of great pleasure and happiness.\"}\n                    </Typography>\n                  </React.Fragment>\n                }\n              >\n                <Button\n                  onClick={() => handleClickForPrimEmo(\"joy\")}\n                  className={classes.emotionButtons}\n                  size=\"large\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  joy\n                </Button>\n              </HtmlTooltip>\n            </ThemeProvider>\n          </Grid>\n          <Grid item xs={3}>\n            <ThemeProvider theme={trust}>\n              <HtmlTooltip\n                arrow\n                leaveDelay={300}\n                placement=\"top\"\n                title={\n                  <React.Fragment>\n                    <Typography color=\"inherit\" variant=\"body2\">\n                      <b>Trust</b>\n                      {\n                        \" is an abstract mental attitude toward a proposition that someone or something is dependable.\"\n                      }\n                    </Typography>\n                  </React.Fragment>\n                }\n              >\n                <Button\n                  onClick={() => handleClickForPrimEmo(\"trust\")}\n                  className={classes.emotionButtons}\n                  size=\"large\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  trust\n                </Button>\n              </HtmlTooltip>\n            </ThemeProvider>\n          </Grid>\n          <Grid item xs={3}>\n            <ThemeProvider theme={fear}>\n              <HtmlTooltip\n                arrow\n                leaveDelay={300}\n                placement=\"top\"\n                title={\n                  <React.Fragment>\n                    <Typography color=\"inherit\" variant=\"body2\">\n                      <b>Fear</b>\n                      {\n                        \" is an unpleasant feeling triggered by the perception of danger, real or imagined.\"\n                      }\n                    </Typography>\n                  </React.Fragment>\n                }\n              >\n                <Button\n                  onClick={() => handleClickForPrimEmo(\"fear\")}\n                  className={classes.emotionButtons}\n                  size=\"large\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  fear\n                </Button>\n              </HtmlTooltip>\n            </ThemeProvider>\n          </Grid>\n          <Grid item xs={3}>\n            <ThemeProvider theme={surprise}>\n              <HtmlTooltip\n                arrow\n                leaveDelay={300}\n                placement=\"top\"\n                title={\n                  <React.Fragment>\n                    <Typography color=\"inherit\" variant=\"body2\">\n                      <b>Surprise</b>\n                      {\n                        \" is a brief mental and physiological state, a startle response experienced by animals and humans as the result of an unexpected event.\"\n                      }\n                    </Typography>\n                  </React.Fragment>\n                }\n              >\n                <Button\n                  onClick={() => handleClickForPrimEmo(\"surprise\")}\n                  className={classes.emotionButtons}\n                  size=\"large\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  surprise\n                </Button>\n              </HtmlTooltip>\n            </ThemeProvider>\n          </Grid>\n          <Grid item xs={3}>\n            <ThemeProvider theme={sadness}>\n              <HtmlTooltip\n                arrow\n                leaveDelay={300}\n                placement=\"top\"\n                title={\n                  <React.Fragment>\n                    <Typography color=\"inherit\" variant=\"body2\">\n                      <b>Sadness</b>\n                      {\n                        \" is an emotional pain associated with, or characterized by, feelings of disadvantage, loss, despair, grief, helplessness, disappointment and sorrow.\"\n                      }\n                    </Typography>\n                  </React.Fragment>\n                }\n              >\n                <Button\n                  onClick={() => handleClickForPrimEmo(\"sadness\")}\n                  className={classes.emotionButtons}\n                  size=\"large\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  sadness\n                </Button>\n              </HtmlTooltip>\n            </ThemeProvider>\n          </Grid>\n          <Grid item xs={3}>\n            <ThemeProvider theme={disgust}>\n              <HtmlTooltip\n                arrow\n                leaveDelay={300}\n                placement=\"top\"\n                title={\n                  <React.Fragment>\n                    <Typography color=\"inherit\" variant=\"body2\">\n                      <b>Disgust</b>\n                      {\n                        \" is an emotional response of rejection or revulsion to something potentially contagious or something considered offensive, distasteful, or unpleasant.\"\n                      }\n                    </Typography>\n                  </React.Fragment>\n                }\n              >\n                <Button\n                  onClick={() => handleClickForPrimEmo(\"disgust\")}\n                  className={classes.emotionButtons}\n                  size=\"large\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  disgust\n                </Button>\n              </HtmlTooltip>\n            </ThemeProvider>\n          </Grid>\n        </Grid>\n        <DialogContentText>{props.primaryEmotion}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <MobileStepper\n          variant=\"progress\"\n          steps={4}\n          position=\"static\"\n          activeStep={props.activeStep}\n          className={props.classes.root}\n          nextButton={\n            <Button\n              size=\"small\"\n              onClick={props.nextStage}\n              disabled={props.activeStep === 4}\n            >\n              Next\n              {props.theme.direction === \"rtl\" ? (\n                <KeyboardArrowLeft />\n              ) : (\n                <KeyboardArrowRight />\n              )}\n            </Button>\n          }\n          backButton={\n            <Button\n              size=\"small\"\n              onClick={props.handleClose}\n              disabled={props.activeStep === 1}\n            >\n              <KeyboardArrowLeft />\n              Cancel\n            </Button>\n          }\n        />\n      </DialogActions>\n      {/* ----- This is the end of the Dialog Area ----- */}\n    </div>\n  );\n};\n\nexport default connect()(LogStage1);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  DialogContentText,\n  Grid,\n  MobileStepper,\n  Slider,\n  Typography,\n} from \"@material-ui/core\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: \"45vh\",\n    marginTop: \"4vh\",\n  },\n  margin: {\n    height: theme.spacing(3),\n  },\n  rightAlign: {\n    textAlign: \"right\",\n  },\n}));\n\nconst marks = [\n  {\n    value: -5,\n    label: \"-5\",\n  },\n  {\n    value: -4,\n    label: \"-4\",\n  },\n  {\n    value: -3,\n    label: \"-3\",\n  },\n  {\n    value: -2,\n    label: \"-2\",\n  },\n  {\n    value: -1,\n    label: \"-1\",\n  },\n  {\n    value: 0,\n    label: \"0\",\n  },\n  {\n    value: 1,\n    label: \"1\",\n  },\n  {\n    value: 2,\n    label: \"2\",\n  },\n  {\n    value: 3,\n    label: \"3\",\n  },\n  {\n    value: 4,\n    label: \"4\",\n  },\n  {\n    value: 5,\n    label: \"5\",\n  },\n];\n\nfunction valueText(value) {\n  const newVal = value;\n  return newVal;\n}\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    minHeight: \"40vh\",\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst LogStage2 = (props) => {\n  // I got some bugs in here with intensityEmotion\n\n  const [numValue, setNumValue] = useState(0);\n\n  const [emotion, setEmotion] = useState(null);\n\n  const classes = useStyles();\n\n  const renderNotStrongEmotion = () => {\n    switch (emotion) {\n      case \"anger\":\n        return \"annoyance\";\n      case \"sadness\":\n        return \"gloominess\";\n      case \"fear\":\n        return \"timidity\";\n      case \"disgust\":\n        return \"dislike\";\n      case \"surprise\":\n        return \"uncertainty\";\n      case \"anticipation\":\n        return \"interest\";\n      case \"trust\":\n        return \"acceptance\";\n      case \"joy\":\n        return \"serenity\";\n      default:\n        return \"Not Strong\";\n    }\n  };\n\n  const renderStrongEmotion = () => {\n    switch (emotion) {\n      case \"anger\":\n        return \"fury\";\n      case \"sadness\":\n        return \"grief\";\n      case \"fear\":\n        return \"terror\";\n      case \"disgust\":\n        return \"loathing\";\n      case \"surprise\":\n        return \"amazement\";\n      case \"anticipation\":\n        return \"vigilance\";\n      case \"trust\":\n        return \"admiration\";\n      case \"joy\":\n        return \"ecstasy\";\n      default:\n        return \"Strong\";\n    }\n  };\n  \n  const handleChangeForInLvl = (event, numValue) => {\n    setEmotion(props.primaryEmotion);\n    setNumValue(numValue);\n    props.setIntensityLevel(numValue);\n    console.log(numValue);\n    intensityEmotionOptions(numValue);\n  };\n\n  const intensityEmotionOptions = (numValue) => {\n    if (numValue > 0) {\n      return props.setIntensityEmotion(renderStrongEmotion());\n    } else if (numValue < 0) {\n      return props.setIntensityEmotion(renderNotStrongEmotion());\n    } else {\n      return props.setIntensityEmotion(props.primaryEmotion);\n    }\n  };\n\n  // You should always add elements inside your render scope\n  // to the second array parameter of useEffect to prevent unexpected bugs.\n  useEffect(() => {\n    setEmotion(props.primaryEmotion);\n    setNumValue(numValue);\n    props.setIntensityLevel(numValue);\n    intensityEmotionOptions(numValue);\n  }, [setEmotion, setNumValue, intensityEmotionOptions, numValue, props]);\n\n  return (\n    <div>\n      {/* ----- This is the start of the Dialog Area ----- */}\n      <DialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\n        How intense are you feeling {props.primaryEmotion}?\n      </DialogTitle>\n      <DialogContent dividers>\n        <div className={classes.root}>\n          <Grid container spacing={2}>\n            <Grid item xs={3}>\n              <Typography\n                id=\"discrete-slider-custom\"\n                className={classes.rightAlign}\n                gutterBottom\n              >\n                {renderNotStrongEmotion()}\n              </Typography>\n            </Grid>\n            <Grid item xs={6}>\n              <Slider\n                value={numValue}\n                onChange={handleChangeForInLvl}\n                track={false}\n                defaultValue={numValue}\n                getAriaValueText={valueText}\n                aria-labelledby=\"track-false-slider\"\n                step={1}\n                min={-5}\n                max={5}\n                valueLabelDisplay=\"auto\"\n                marks={marks}\n              />\n            </Grid>\n            <Grid item xs={3}>\n              <Typography id=\"discrete-slider-custom\" gutterBottom>\n                {renderStrongEmotion()}\n              </Typography>\n            </Grid>\n          </Grid>\n        </div>\n        <DialogContentText>{props.intensityLevel}</DialogContentText>\n        <DialogContentText>{props.intensityEmotion}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <MobileStepper\n          variant=\"progress\"\n          steps={4}\n          position=\"static\"\n          activeStep={props.activeStep}\n          className={props.classes.root}\n          nextButton={\n            <Button\n              size=\"small\"\n              onClick={props.nextStage}\n              disabled={props.activeStep === 4}\n            >\n              Next\n              {props.theme.direction === \"rtl\" ? (\n                <KeyboardArrowLeft />\n              ) : (\n                <KeyboardArrowRight />\n              )}\n            </Button>\n          }\n          backButton={\n            <Button\n              size=\"small\"\n              onClick={props.prevStage}\n              disabled={props.activeStep === 0}\n            >\n              {props.theme.direction === \"rtl\" ? (\n                <KeyboardArrowRight />\n              ) : (\n                <KeyboardArrowLeft />\n              )}\n              Back\n            </Button>\n          }\n        />\n      </DialogActions>\n      {/* ----- This is the end of the Dialog Area ----- */}\n    </div>\n  );\n};\n\nexport default connect()(LogStage2);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  DialogContentText,\n  TextField,\n  MobileStepper,\n  Typography,\n} from \"@material-ui/core\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    minHeight: \"16.5vh\",\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst LogStage3 = (props) => {\n\n  const handleChangeForHow = (e) => {\n    props.setHowFeel(e.target.value);\n  }\n\n  const handleChangeForWhy = (e) => {\n    props.setWhyFeel(e.target.value);\n  };\n\n  return (\n    <div>\n      {/* ----- This is the start of the Dialog Area ----- */}\n      <DialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\n        Describe how you feel?\n      </DialogTitle>\n      <DialogContent dividers>\n        <TextField\n          id=\"outlined-multiline-static\"\n          label=\"How\"\n          multiline\n          rows={4}\n          variant=\"outlined\"\n          fullWidth\n          onChange={(event) => handleChangeForHow(event)}\n        />\n        <DialogContentText>{props.howFeel}</DialogContentText>\n      </DialogContent>\n      <DialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\n        Describe why you are feeling {props.primaryEmotion}?\n      </DialogTitle>\n      <DialogContent dividers>\n        <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Why\"\n          multiline\n          rows={4}\n          variant=\"outlined\"\n          fullWidth\n          onChange={(event) => handleChangeForWhy(event)}\n        />\n        <DialogContentText>{props.whyFeel}</DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <MobileStepper\n          variant=\"progress\"\n          steps={4}\n          position=\"static\"\n          activeStep={props.activeStep}\n          className={props.classes.root}\n          nextButton={\n            <Button\n              size=\"small\"\n              onClick={props.nextStage}\n              disabled={props.activeStep === 4}\n            >\n              Next\n              {props.theme.direction === \"rtl\" ? (\n                <KeyboardArrowLeft />\n              ) : (\n                <KeyboardArrowRight />\n              )}\n            </Button>\n          }\n          backButton={\n            <Button\n              size=\"small\"\n              onClick={props.prevStage}\n              disabled={props.activeStep === 0}\n            >\n              {props.theme.direction === \"rtl\" ? (\n                <KeyboardArrowRight />\n              ) : (\n                <KeyboardArrowLeft />\n              )}\n              Back\n            </Button>\n          }\n        />\n      </DialogActions>\n      {/* ----- This is the end of the Dialog Area ----- */}\n    </div>\n  );\n};\n\nexport default connect()(LogStage3);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  DialogContentText,\n  MobileStepper,\n  Typography,\n} from \"@material-ui/core\";\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { KeyboardArrowLeft, KeyboardArrowRight } from \"@material-ui/icons\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n  },\n  closeButton: {\n    position: \"absolute\",\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton\n          aria-label=\"close\"\n          className={classes.closeButton}\n          onClick={onClose}\n        >\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(2),\n    minHeight: \"40vh\",\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst LogStage4 = (props) => {\n  \n  const [emotionLog, setEmotionLog] = useState({\n    primaryEmotion: props.primaryEmotion,\n    intensityEmotion: props.intensityEmotion,\n    intensityLevel: props.intensityLevel,\n    howFeel: props.howFeel,\n    whyFeel: props.whyFeel,\n  });\n\n  const theEnd = () => {\n    setEmotionLog({\n      primaryEmotion: props.primaryEmotion,\n      intensityEmotion: props.intensityEmotion,\n      intensityLevel: props.intensityLevel,\n      howFeel: props.howFeel,\n      whyFeel: props.whyFeel,\n    });\n    console.log(emotionLog);\n\n    props.handleCloseAndDispatch(emotionLog); \n  }\n\n  return (\n    <div>\n      {/* ----- This is the start of the Dialog Area ----- */}\n      <DialogTitle id=\"customized-dialog-title\" onClose={props.handleClose}>\n        Review Emotional Log\n      </DialogTitle>\n      <DialogContent dividers>\n        <DialogContentText>Here is your log:</DialogContentText>\n        <ul>\n          <li>{props.primaryEmotion}</li>\n          <li>{props.intensityLevel}</li>\n          <li>{props.intensityEmotion}</li>\n          <li>{props.howFeel}</li>\n          <li>{props.whyFeel}</li>\n        </ul>\n      </DialogContent>\n      <DialogActions>\n        <MobileStepper\n          variant=\"progress\"\n          steps={4}\n          position=\"static\"\n          activeStep={props.activeStep}\n          className={props.classes.root}\n          nextButton={\n            <Button\n              size=\"small\"\n              onClick={theEnd}\n              disabled={props.activeStep === 4}\n            >\n              Finish\n              {props.theme.direction === \"rtl\" ? (\n                <KeyboardArrowLeft />\n              ) : (\n                <KeyboardArrowRight />\n              )}\n            </Button>\n          }\n          backButton={\n            <Button\n              size=\"small\"\n              onClick={props.prevStage}\n              disabled={props.activeStep === 0}\n            >\n              {props.theme.direction === \"rtl\" ? (\n                <KeyboardArrowRight />\n              ) : (\n                <KeyboardArrowLeft />\n              )}\n              Back\n            </Button>\n          }\n        />\n      </DialogActions>\n      {/* ----- This is the end of the Dialog Area ----- */}\n    </div>\n  );\n};\n\nexport default connect()(LogStage4);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Dialog, Slide } from \"@material-ui/core\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport LogStage1 from \"../LogStage1/LogStage1\";\nimport LogStage2 from \"../LogStage2/LogStage2\";\nimport LogStage3 from \"../LogStage3/LogStage3\";\nimport LogStage4 from \"../LogStage4/LogStage4\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst LogEmotionsButton = (props) => {\n  // ----- Functional State with React useState Hook -----\n  // primary_emotion - State default null\n  const [primaryEmotion, setPrimaryEmotion] = useState(null);\n  // intensity_emotion - State default null\n  const [intensityEmotion, setIntensityEmotion] = useState(null);\n  // intensity_level - State default 0\n  const [intensityLevel, setIntensityLevel] = useState(0);\n  // // how_feel - State default null\n  const [howFeel, setHowFeel] = useState(null);\n  // // why_feel - State default null\n  const [whyFeel, setWhyFeel] = useState(null);\n\n  // Stage state which will render the correct stage of the process of the emotion log\n  // default is Stage 1 - Will begin at Stage 1\n  const [stage, setStage] = useState(1);\n  // Material-ui state for Dialog component rendering\n  const [open, setOpen] = useState(false);\n\n  const [activeStep, setActiveStep] = useState(0);\n\n  const theme = useTheme();\n\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  const useStyles = makeStyles({\n    root: {\n      minWidth: \"85vh\",\n      flexGrow: 1,\n    },\n  });\n\n  // Proceed to next stage\n  const nextStage = () => {\n    setStage(stage + 1);\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  // Proceed to prev stage\n  const prevStage = () => {\n    setStage(stage - 1);\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setStage(1);\n    setActiveStep(0);\n    setPrimaryEmotion(null);\n    setIntensityEmotion(null);\n    setIntensityLevel(0);\n    setHowFeel(null);\n    setWhyFeel(null);\n  };\n\n  const handleCloseAndDispatch = (emotionLog) => {\n    console.log(emotionLog);\n    props.dispatch({ type: \"ADD_EMOTION_LOG\", payload: emotionLog });\n    handleClose();\n  };\n\n  const renderSwitch = () => {\n    \n    switch (stage) {\n      case 1:\n        return (\n          <LogStage1\n            handleClose={handleClose}\n            nextStage={nextStage}\n            activeStep={activeStep}\n            classes={classes}\n            theme={theme}\n            primaryEmotion={primaryEmotion}\n            setPrimaryEmotion={setPrimaryEmotion}\n          />\n        );\n      case 2:\n        return (\n          <LogStage2\n            handleClose={handleClose}\n            prevStage={prevStage}\n            nextStage={nextStage}\n            activeStep={activeStep}\n            classes={classes}\n            theme={theme}\n            primaryEmotion={primaryEmotion}\n            intensityLevel={intensityLevel}\n            setIntensityLevel={setIntensityLevel}\n            intensityEmotion={intensityEmotion}\n            setIntensityEmotion={setIntensityEmotion}\n          />\n        );\n      case 3:\n        return (\n          <LogStage3\n            handleClose={handleClose}\n            prevStage={prevStage}\n            nextStage={nextStage}\n            activeStep={activeStep}\n            classes={classes}\n            theme={theme}\n            primaryEmotion={primaryEmotion}\n            howFeel={howFeel}\n            setHowFeel={setHowFeel}\n            whyFeel={whyFeel}\n            setWhyFeel={setWhyFeel}\n          />\n        );\n      case 4:\n        return (\n          <LogStage4\n            handleClose={handleClose}\n            handleCloseAndDispatch={handleCloseAndDispatch}\n            prevStage={prevStage}\n            activeStep={activeStep}\n            classes={classes}\n            theme={theme}\n            primaryEmotion={primaryEmotion}\n            intensityLevel={intensityLevel}\n            intensityEmotion={intensityEmotion}\n            howFeel={howFeel}\n            whyFeel={whyFeel}\n          />\n        );\n      default:\n        console.log(\"This is a multi-stage dialog built with React.\");\n    }\n  }\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n        Log Emotion\n      </Button>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        maxWidth=\"md\"\n        fullScreen={fullScreen}\n        TransitionComponent={Transition}\n        keepMounted\n        aria-labelledby=\"form-dialog-title\"\n      >\n        {/* ----- This is the start of the Dialog Area ----- */}\n        {renderSwitch(stage)}\n        {/* ----- This is the end of the Dialog Area ----- */}\n      </Dialog>\n    </div>\n  );\n};\n\nexport default connect()(LogEmotionsButton);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport LogEmotionsButton from \"../../Utilities/LogEmotionsButton/LogEmotionsButton\";\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\nimport TrackChangesIcon from \"@material-ui/icons/TrackChanges\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport TableChartIcon from \"@material-ui/icons/TableChart\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n    margin: \"auto\",\n  },\n  box: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  button: {\n    marginLeft: \"auto\",\n    textDecorationLine: \"none\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  icon: {\n    marginRight: \"auto\",\n  },\n  paper: {\n    maxWidth: \"90vh\",\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  logbox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignContent: \"center\",\n    textAlign: \"center\",\n    margin: \"1vh\",\n  },\n  marginBottom: {\n    marginBottom: \"1em\",\n  },\n}));\n\n// this could also be written with destructuring parameters as:\n// const UserPage = ({ user }) => (\n// and then instead of `props.user.username` you could use `user.username`\nconst UserPage = (props) => {\n  const { dispatch } = props;\n\n  const classes = useStyles();\n\n  // You should always add elements inside your render scope\n  // to the second array parameter of useEffect to prevent unexpected bugs.\n  useEffect(() => {\n    dispatch({ type: \"FETCH_PIE_DATA\" });\n    dispatch({ type: \"FETCH_RADAR_DATA\" });\n    dispatch({ type: \"FETCH_CALENDAR_DATA\" });\n    dispatch({ type: \"FETCH_TABLE_DATA\" });\n  }, [dispatch]);\n\n  return (\n    <div className={classes.root}>\n      <Container maxWidth=\"lg\">\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer}>\n            <Container maxWidth=\"sm\" className={classes.container}>\n              <Grid container spacing={3}>\n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <Box className={classes.logbox}>\n                      <Typography variant=\"h4\" className={classes.marginBottom}>\n                        How do you feel, {props.user.username}?\n                      </Typography>\n                      <LogEmotionsButton />\n                    </Box>\n                  </Paper>\n                </Grid>\n              </Grid>\n            </Container>\n          </div>\n          {props.user.id && (\n            <div className={classes.appBarSpacer}>\n              <Container maxWidth=\"sm\" className={classes.container}>\n                <Grid container spacing={3}>\n                  <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                      <Box className={classes.box}>\n                        <DonutLargeIcon\n                          fontSize=\"large\"\n                          className={classes.icon}\n                        />\n                        <Link to=\"/pie\" className={classes.button}>\n                          <Button>Emotion Pie</Button>\n                        </Link>\n                      </Box>\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                      <Box className={classes.box}>\n                        <TrackChangesIcon\n                          fontSize=\"large\"\n                          className={classes.icon}\n                        />\n                        <Link to=\"/radar\" className={classes.button}>\n                          <Button>Emotional Radar</Button>\n                        </Link>\n                      </Box>\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                      <Box className={classes.box}>\n                        <DateRangeIcon\n                          fontSize=\"large\"\n                          className={classes.icon}\n                        />\n                        <Link to=\"/calendar\" className={classes.button}>\n                          <Button>Emotions to Date</Button>\n                        </Link>\n                      </Box>\n                    </Paper>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Paper className={classes.paper}>\n                      <Box className={classes.box}>\n                        <TableChartIcon\n                          fontSize=\"large\"\n                          className={classes.icon}\n                        />\n                        <Link to=\"/table\" className={classes.button}>\n                          <Button>Emotions Table</Button>\n                        </Link>\n                      </Box>\n                    </Paper>\n                  </Grid>\n                </Grid>\n              </Container>\n            </div>\n          )}\n        </main>\n      </Container>\n    </div>\n  );\n};\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst mapStateToProps = (state) => ({\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(UserPage);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ResponsivePie } from \"@nivo/pie\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Button, Container, Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    height: \"100vh\",\n    marginTop: \"2vh\",\n  },\n  chart: {\n    width: \"90vh\",\n    height: \"60vh\",\n  },\n});\n\nconst PieChart = (props) => {\n\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const [data, setData] = useState([]);\n\n  const { emotionPie } = props;\n\n  // You should always add elements inside your render scope\n  // to the second array parameter of useEffect to prevent unexpected bugs.\n  useEffect(() => {\n    setData(emotionPie);\n  }, [setData, emotionPie]);\n\n  return (\n    <>\n      <Container maxWidth=\"lg\" className={classes.root}>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={3}\n        >\n          <Grid item xs={8}>\n            <Typography variant=\"h3\" gutterBottom>\n              Emotion Pie\n            </Typography>\n            <Button variant=\"contained\" onClick={() => history.push(\"/home\")}>\n              Back\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <Box component=\"div\" className={classes.chart}>\n              <ResponsivePie\n                data={data}\n                margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\n                innerRadius={0.5}\n                padAngle={0.7}\n                cornerRadius={3}\n                colors={[\n                  \"#E76F51\",\n                  \"#2A9D8F\",\n                  \"#96B2F3\",\n                  \"#FFB0F7\",\n                  \"#91EBF3\",\n                  \"#F4A261\",\n                  \"#98CE00\",\n                  \"#E9C46A\",\n                ]}\n                borderWidth={1}\n                borderColor={{ from: \"color\", modifiers: [[\"darker\", 0.2]] }}\n                radialLabelsSkipAngle={10}\n                radialLabelsTextXOffset={6}\n                radialLabelsTextColor=\"#333333\"\n                radialLabelsLinkOffset={0}\n                radialLabelsLinkDiagonalLength={16}\n                radialLabelsLinkHorizontalLength={24}\n                radialLabelsLinkStrokeWidth={1}\n                radialLabelsLinkColor={{ from: \"color\" }}\n                slicesLabelsSkipAngle={10}\n                slicesLabelsTextColor=\"#333333\"\n                animate={true}\n                motionStiffness={90}\n                motionDamping={15}\n                defs={[\n                  {\n                    id: \"dots\",\n                    type: \"patternDots\",\n                    background: \"inherit\",\n                    color: \"rgba(255, 255, 255, 0.3)\",\n                    size: 4,\n                    padding: 1,\n                    stagger: true,\n                  },\n                  {\n                    id: \"lines\",\n                    type: \"patternLines\",\n                    background: \"inherit\",\n                    color: \"rgba(255, 255, 255, 0.3)\",\n                    rotation: -45,\n                    lineWidth: 6,\n                    spacing: 10,\n                  },\n                ]}\n                fill={[\n                  {\n                    match: {\n                      id: \"joy\",\n                    },\n                    id: \"dots\",\n                  },\n                  {\n                    match: {\n                      id: \"trust\",\n                    },\n                    id: \"dots\",\n                  },\n                  {\n                    match: {\n                      id: \"anticipation\",\n                    },\n                    id: \"dots\",\n                  },\n                  {\n                    match: {\n                      id: \"surprise\",\n                    },\n                    id: \"dots\",\n                  },\n                  {\n                    match: {\n                      id: \"disgust\",\n                    },\n                    id: \"lines\",\n                  },\n                  {\n                    match: {\n                      id: \"sadness\",\n                    },\n                    id: \"lines\",\n                  },\n                  {\n                    match: {\n                      id: \"fear\",\n                    },\n                    id: \"lines\",\n                  },\n                  {\n                    match: {\n                      id: \"anger\",\n                    },\n                    id: \"lines\",\n                  },\n                ]}\n                legends={[\n                  {\n                    anchor: \"bottom\",\n                    direction: \"row\",\n                    translateY: 56,\n                    itemWidth: 100,\n                    itemHeight: 18,\n                    itemTextColor: \"#999\",\n                    symbolSize: 18,\n                    symbolShape: \"circle\",\n                    effects: [\n                      {\n                        on: \"hover\",\n                        style: {\n                          itemTextColor: \"#000\",\n                        },\n                      },\n                    ],\n                  },\n                ]}\n              />\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log('Here is Redux store state:', state); // state\n  console.log(\"Here is Redux ownProps:\", ownProps); // ownProps\n  return {\n    emotionPie: state.emotionLog.emotionPie,\n  };\n};\n\nexport default connect(mapStateToProps)(PieChart);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ResponsiveRadar } from \"@nivo/radar\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Button, Container, Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    height: \"100vh\",\n    marginTop: \"2vh\",\n  },\n  chart: {\n    width: \"90vh\",\n    height: \"70vh\",\n  },\n});\n\nconst RadarChart = (props) => {\n\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const [data, setData] = useState([]);\n\n  const { emotionalRadar } = props;\n\n  // You should always add elements inside your render scope\n  // to the second array parameter of useEffect to prevent unexpected bugs.\n  useEffect(() => {\n    setData(emotionalRadar);\n  }, [setData, emotionalRadar]);\n\n  return (\n    <>\n      <Container maxWidth=\"lg\" className={classes.root}>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={3}\n        >\n          <Grid item xs={8}>\n            <Typography variant=\"h3\" gutterBottom>\n              Emotional Radar\n            </Typography>\n            <Button variant=\"contained\" onClick={() => history.push(\"/home\")}>\n              Back\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <Box component=\"div\" className={classes.chart}>\n              <ResponsiveRadar\n                data={data}\n                keys={[\"This many times\"]}\n                indexBy=\"emotion\"\n                maxValue=\"auto\"\n                margin={{ top: 70, right: 80, bottom: 40, left: 80 }}\n                curve=\"cardinalClosed\"\n                borderWidth={2}\n                borderColor={{ from: \"color\" }}\n                gridLevels={5}\n                gridShape=\"circular\"\n                gridLabelOffset={36}\n                enableDots={true}\n                dotSize={10}\n                dotColor={{ theme: \"background\" }}\n                dotBorderWidth={2}\n                dotBorderColor={{ from: \"color\" }}\n                enableDotLabel={true}\n                dotLabel=\"value\"\n                dotLabelYOffset={-12}\n                colors={[\n                  \"#61cdbb\",\n                  \"#32936F\",\n                  \"#e8c1a0\",\n                  \"#f47560\",\n                  \"#F4E04D\",\n                  \"#587792\",\n                  \"#CBDFBD\",\n                  \"#A53860\",\n                ]}\n                fillOpacity={0.25}\n                blendMode=\"normal\"\n                animate={true}\n                motionStiffness={90}\n                motionDamping={15}\n                isInteractive={true}\n                legends={[\n                  {\n                    anchor: \"top-left\",\n                    direction: \"column\",\n                    translateX: -50,\n                    translateY: -40,\n                    itemWidth: 80,\n                    itemHeight: 20,\n                    itemTextColor: \"#999\",\n                    symbolSize: 12,\n                    symbolShape: \"circle\",\n                    effects: [\n                      {\n                        on: \"hover\",\n                        style: {\n                          itemTextColor: \"#000\",\n                        },\n                      },\n                    ],\n                  },\n                ]}\n              />\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"Here is Redux store state:\", state); // state\n  console.log(\"Here is Redux ownProps:\", ownProps); // ownProps\n  return {\n    emotionalRadar: state.emotionLog.emotionalRadar,\n  };\n};\n\nexport default connect(mapStateToProps)(RadarChart);\n","import React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ResponsiveCalendar } from \"@nivo/calendar\";\nimport { useHistory } from \"react-router-dom\";\nimport { Box, Button, Container, Grid, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    height: \"100vh\",\n    marginTop: \"2vh\",\n  },\n  chart: {\n    width: \"90vh\",\n    height: \"70vh\",\n  },\n});\n\nconst CalendarChart = (props) => {\n\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const [data, setData] = useState([]);\n\n  const { emotionsToDate } = props;\n\n  // You should always add elements inside your render scope\n  // to the second array parameter of useEffect to prevent unexpected bugs.\n  useEffect(() => {\n    setData(emotionsToDate);\n  }, [setData, emotionsToDate]);\n\n\n  // If data is undefined it errors out\n  const startDate = () => {\n    const start = emotionsToDate[0].day;\n    console.log('This is the start date', start);\n    return start;\n  }\n\n  // If data is undefined it errors out\n  const endDate = () => {\n    const date = emotionsToDate.length - 1;\n    const end = emotionsToDate[date].day;\n    console.log(\"This is the end date\", end);\n    return end;\n  };\n\n  return (\n    <>\n      <Container maxWidth=\"lg\" className={classes.root}>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={3}\n        >\n          <Grid item xs={8}>\n            <Typography variant=\"h3\" gutterBottom>\n              Emotions to Date\n            </Typography>\n            <Button variant=\"contained\" onClick={() => history.push(\"/home\")}>\n              Back\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <Box component=\"div\" className={classes.chart}>\n              <ResponsiveCalendar\n                data={data}\n                from={startDate()} // Will have to turn these into a function some how...\n                to={endDate()}\n                emptyColor=\"#eeeeee\"\n                colors={[\n                  \"#61cdbb\",\n                  \"#32936F\",\n                  \"#e8c1a0\",\n                  \"#f47560\",\n                  \"#F4E04D\",\n                  \"#587792\",\n                  \"#CBDFBD\",\n                  \"#A53860\",\n                ]}\n                minValue={0}\n                maxValue={9}\n                indexBy=\"emotion\"\n                margin={{ top: 40, right: 40, bottom: 40, left: 40 }}\n                yearSpacing={40}\n                monthBorderColor=\"#ffffff\"\n                monthLegendPosition=\"after\"\n                dayBorderWidth={2}\n                dayBorderColor=\"#ffffff\"\n                legends={[\n                  {\n                    anchor: \"bottom-right\",\n                    direction: \"row\",\n                    translateY: 36,\n                    itemCount: 6,\n                    itemWidth: 42,\n                    itemHeight: 36,\n                    itemsSpacing: 14,\n                    itemDirection: \"right-to-left\",\n                  },\n                ]}\n              />\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(\"Here is Redux store state:\", state); // state\n  console.log(\"Here is Redux ownProps:\", ownProps); // ownProps\n  return {\n    emotionsToDate: state.emotionLog.emotionsToDate,\n  };\n};\n\nexport default connect(mapStateToProps)(CalendarChart);\n","import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { withStyles, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport { Box, Button, Container, Grid, Typography } from \"@material-ui/core\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableFooter from \"@material-ui/core/TableFooter\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FirstPageIcon from \"@material-ui/icons/FirstPage\";\nimport KeyboardArrowLeft from \"@material-ui/icons/KeyboardArrowLeft\";\nimport KeyboardArrowRight from \"@material-ui/icons/KeyboardArrowRight\";\nimport LastPageIcon from \"@material-ui/icons/LastPage\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n// import EditIcon from \"@material-ui/icons/Edit\";\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onChangePage(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onChangePage(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onChangePage(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    <Box component=\"div\" className={classes.root}>\n        <IconButton\n          onClick={handleFirstPageButtonClick}\n          disabled={page === 0}\n          aria-label=\"first page\"\n        >\n          {theme.direction === \"rtl\" ? <LastPageIcon /> : <FirstPageIcon />}\n        </IconButton>\n        <IconButton\n          onClick={handleBackButtonClick}\n          disabled={page === 0}\n          aria-label=\"previous page\"\n        >\n          {theme.direction === \"rtl\" ? (\n            <KeyboardArrowRight />\n          ) : (\n            <KeyboardArrowLeft />\n          )}\n        </IconButton>\n        <IconButton\n          onClick={handleNextButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"next page\"\n        >\n          {theme.direction === \"rtl\" ? (\n            <KeyboardArrowLeft />\n          ) : (\n            <KeyboardArrowRight />\n          )}\n        </IconButton>\n        <IconButton\n          onClick={handleLastPageButtonClick}\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n          aria-label=\"last page\"\n        >\n          {theme.direction === \"rtl\" ? <FirstPageIcon /> : <LastPageIcon />}\n        </IconButton>\n    </Box>\n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles({\n  root: {\n    minHeight: \"100vh\",\n    marginTop: \"2vh\",\n  },\n  chart: {\n    minWidth: \"50vh\",\n    minHeight: \"70vh\",\n    marginBottom: \"10vh\",\n  },\n  table: {\n    minWidth: \"50vh\",\n  },\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n  root: {\n    minWidth: \"15vh\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst TableChart = (props) => {\n  const classes = useStyles();\n\n  const history = useHistory();\n\n  const [data, setData] = useState([]);\n\n  const { emotionsTable } = props;\n\n  // You should always add elements inside your render scope\n  // to the second array parameter of useEffect to prevent unexpected bugs.\n  useEffect(() => {\n    setData(emotionsTable);\n  }, [setData, emotionsTable]);\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  // const handleEdit = (id) => {\n  //   console.log(id);\n  // }\n\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"lg\" className={classes.root}>\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n          spacing={3}\n        >\n          <Grid item xs={8}>\n            <Typography variant=\"h3\" gutterBottom>\n              Emotions Table\n            </Typography>\n            <Button variant=\"contained\" onClick={() => history.push(\"/home\")}>\n              Back\n            </Button>\n          </Grid>\n          <Grid item xs={12}>\n            <Box component=\"div\" className={classes.chart}>\n              <TableContainer component={Paper}>\n                <Table className={classes.table} aria-label=\"customized table\">\n                  <TableHead>\n                    <TableRow>\n                      <StyledTableCell align=\"right\">Date</StyledTableCell>\n                      <StyledTableCell align=\"right\">\n                        Primary Emotion\n                      </StyledTableCell>\n                      <StyledTableCell align=\"right\">\n                        Intensity Emotion\n                      </StyledTableCell>\n                      <StyledTableCell align=\"right\">\n                        Intensity Level\n                      </StyledTableCell>\n                      <StyledTableCell align=\"right\">\n                        How did I feel\n                      </StyledTableCell>\n                      <StyledTableCell align=\"right\">\n                        Why did I feel\n                      </StyledTableCell>\n                      {/* <StyledTableCell align=\"right\">Edit</StyledTableCell> */}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {(rowsPerPage > 0\n                      ? data.slice(\n                          page * rowsPerPage,\n                          page * rowsPerPage + rowsPerPage\n                        )\n                      : data\n                    ).map((row) => (\n                      <StyledTableRow key={row.date}>\n                        <StyledTableCell align=\"right\">\n                          {row.date}\n                        </StyledTableCell>\n                        <StyledTableCell align=\"right\">\n                          {row.primaryEmotion}\n                        </StyledTableCell>\n                        <StyledTableCell align=\"right\">\n                          {row.intensityEmotion}\n                        </StyledTableCell>\n                        <StyledTableCell align=\"right\">\n                          {row.intensityLevel}\n                        </StyledTableCell>\n                        <StyledTableCell align=\"right\">\n                          {row.howFeel}\n                        </StyledTableCell>\n                        <StyledTableCell align=\"right\">\n                          {row.whyFeel}\n                        </StyledTableCell>\n                        {/* <StyledTableCell align=\"right\">\n                          <IconButton\n                            aria-label=\"edit\"\n                            color=\"secondary\"\n                            onClick={() => handleEdit(row.id)}\n                          >\n                            <EditIcon />\n                          </IconButton>\n                        </StyledTableCell> */}\n                      </StyledTableRow>\n                    ))}\n                    {emptyRows > 0 && (\n                      <TableRow style={{ height: 53 * emptyRows }}>\n                        <TableCell colSpan={6} />\n                      </TableRow>\n                    )}\n                  </TableBody>\n                  <TableFooter>\n                    <TableRow>\n                      <TablePagination\n                        rowsPerPageOptions={[\n                          5,\n                          10,\n                          25,\n                          { label: \"All\", value: -1 },\n                        ]}\n                        colSpan={6}\n                        count={data.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        SelectProps={{\n                          inputProps: { \"aria-label\": \"rows per page\" },\n                          native: true,\n                        }}\n                        onChangePage={handleChangePage}\n                        onChangeRowsPerPage={handleChangeRowsPerPage}\n                        ActionsComponent={TablePaginationActions}\n                      />\n                    </TableRow>\n                  </TableFooter>\n                </Table>\n              </TableContainer>\n            </Box>\n          </Grid>\n        </Grid>\n      </Container>\n    </>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    emotionsTable: state.emotionLog.emotionsTable,\n  };\n};\n\nexport default connect(mapStateToProps)(TableChart);\n","// React\nimport React, { Component } from \"react\";\n// React Router DOM\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n// Redux\nimport { connect } from \"react-redux\";\n// Protected Components\nimport ProtectedRoute from \"../../Utilities/ProtectedRoute/ProtectedRoute\";\n// Component Pages\n// import HomePageContent from \"../../Pages/HomePageContent/HomePageContent\";\nimport AboutPage from \"../../Pages/AboutPage/AboutPage\";\nimport SettingsPage from \"../../Pages/SettingsPage/SettingsPage\";\nimport UserPage from \"../../Pages/UserPage/UserPage\";\nimport SignInPage from \"../../Pages/SignInPage/SignInPage\";\nimport SignUpPage from \"../../Pages/SignUpPage/SignUpPage\";\n\nimport PieChart from \"../../Charts/PieChart/PieChart\";\nimport RadarChart from \"../../Charts/RadarChart/RadarChart\";\nimport CalendarChart from \"../../Charts/CalendarChart/CalendarChart\";\nimport TableChart from \"../../Charts/TableChart/TableChart\";\n\n\nclass Content extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: \"FETCH_USER\" });\n  }\n\n  render() {\n    return (\n      <Router>\n        <Switch>\n          {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n          <Redirect exact from=\"/\" to=\"/home\" />\n          {/* Visiting localhost:3000/about will show the about page.\n            This is a route anyone can see, no login necessary */}\n          <Route exact path=\"/about\" component={AboutPage} />\n          {/* <Route exact path=\"/landing\" component={HomePageContent} /> */}\n          <Route exact path=\"/signin\" component={SignInPage} />\n          <Route exact path=\"/signup\" component={SignUpPage} />\n          {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/home will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the 'Login' or 'Register' page.\n            Even though it seems like they are different pages, the user is always on localhost:3000/home */}\n          <ProtectedRoute exact path=\"/home\" component={UserPage} />\n          {/* This works the same as the other protected route, except that if the user is logged in,\n            they will see the info page instead. */}\n          {/* <ProtectedRoute exact path=\"/info\" component={InfoPage} /> */}\n          <ProtectedRoute exact path=\"/pie\" component={PieChart} />\n          <ProtectedRoute exact path=\"/radar\" component={RadarChart} />\n          <ProtectedRoute exact path=\"/calendar\" component={CalendarChart} />\n          <ProtectedRoute exact path=\"/table\" component={TableChart} />\n          <ProtectedRoute exact path=\"/settings\" component={SettingsPage} />\n          {/* If none of the other routes matched, we will show a 404. */}\n          <Route render={() => <h1>404</h1>} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default connect()(Content);\n","// React\nimport React, { Component } from \"react\";\n// React Router DOM\nimport {\n  HashRouter as Router,\n} from \"react-router-dom\";\n// Components\nimport Nav from \"../Nav/Nav\";\nimport Footer from \"../Footer/Footer\";\nimport ContentSwitch from \"../ContentSwitch/ContentSwitch\"\n\nimport \"./Content.css\";\n\nclass Content extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Nav />\n          <ContentSwitch/>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default Content;\n","// React\nimport React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\n// Components\nimport Content from \"../Layout/Content/Content\";\n\n// https://material-ui.com/customization/color/#color\nimport { amber, blueGrey } from \"@material-ui/core/colors\";\n\nconst mainTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blueGrey[500],\n      dark: blueGrey[700],\n      light: blueGrey[100],\n    },\n    secondary: {\n      main: amber[700],\n      ark: amber[900],\n      light: amber[300],\n    },\n    // error: {\n    //   main: deepOrange[400],\n    // },\n    // warning: {\n    //   main: orange[300],\n    // },\n    // info: {\n    //   main: grey[200],\n    // },\n    // success: {\n    //   main: lightGreen[300],\n    // },\n  },\n});\n\nconst App = () => {\n  return (\n    <>\n      <ThemeProvider theme={mainTheme}>\n        <CssBaseline />\n        <Content />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n // imports ./redux/reducers/index.js\nimport rootReducer from './redux/reducers';\n// imports ./redux/sagas/index.js\nimport rootSaga from './redux/sagas';\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}